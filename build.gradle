plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'xin.vanilla'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url "https://jitpack.io" }
    mavenCentral()
    flatDir {
        dir 'libs'
    }
}

dependencies {
    // Spring & JDBC auto-config & aop
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // MyBatis-Plus for Spring Boot 3
    implementation 'com.baomidou:mybatis-plus-spring-boot3-starter:3.5.12'

    // SQLite JDBC driver
    implementation 'org.xerial:sqlite-jdbc:3.46.1.3'

    // Shiro
    implementation 'com.mikuac:shiro:2.4.7'

    // YAML config via Jackson
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    // Validation
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    implementation 'org.hibernate.validator:hibernate-validator'

    // tools
    implementation 'cn.hutool:hutool-all:5.8.39'
    // PinYin
    implementation 'com.github.houbb:pinyin:0.4.0'
    // rcon
    implementation 'xin.vanilla.rcon:rcon:1.2.1'
    // system info
    implementation 'com.github.oshi:oshi-core:6.8.2'
    // wordle
    implementation 'com.kennycason:kumo-core:1.28'
    implementation 'com.kennycason:kumo-tokenizers:1.28'
    // Web Testing and Automation
    implementation 'com.microsoft.playwright:playwright:1.54.0'
    // Quartz
    implementation 'org.quartz-scheduler:quartz:2.5.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    enabled = false
}

def activeProfile = gradle.startParameter.taskNames.any {
    it.contains("bootJar") || it.contains("build")
} ? "prod" : "dev"

tasks.named('processResources') {
    filesMatching('application.yml') {
        filter { line ->
            line.replaceAll('active:\\s*\\w+', "active: ${activeProfile}")
        }
    }
    from('src/main/java') {
        include 'xin/vanilla/banira/mapper/mybatis/mybatis-*.xml'
    }
}

tasks.named('bootJar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Created-By': "Gradle ${gradle.gradleVersion}"
        )
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

gitProperties {
    keys = ['git.branch', 'git.commit.id.abbrev', 'git.commit.time']

    customProperty('git.commit.count') {
        def process = "git rev-list --count HEAD".execute()
        process.waitFor()
        return process.text.trim()
    }

    customProperty('git.last.commit.short') {
        def process = "git rev-parse --short=7 HEAD".execute()
        process.waitFor()
        return process.text.trim()
    }

    dateFormat = "yyyy-MM-dd HH:mm:ss"
    dateFormatTimeZone = "UTC"
}
